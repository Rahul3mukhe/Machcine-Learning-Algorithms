# -*- coding: utf-8 -*-
"""Iris_Dataset_Analisis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BxJGWcy720_VPtaPDZ_9UHl7MBm2fSFF
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = sns.load_dataset('iris')
df.head()

df['species'].unique()

df.isnull().sum()

#we will remove setosa to convert it into binary classification
df = df[df['species'] != 'setosa']

df.head()

df['species'] = df['species'].map({'versicolor':0,'virginica':1})

df.head()

##split my dataset into independent and dependent
x = df.iloc[:,:-1]
y = df.iloc[:,-1]

x,y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(
    x,y,test_size=0.2,random_state=42)

from sklearn.linear_model import LogisticRegression
classifier  = LogisticRegression()

from sklearn.model_selection import GridSearchCV
parameter = {'penalty':['l1','l2','elasticnet'],'C':[1,2,3,4,5,6,10,20,30,40,50,100]}

Classifier_regressor = GridSearchCV(classifier,param_grid=parameter,scoring='accuracy',cv=5)

Classifier_regressor.fit(x_train,y_train)

print(Classifier_regressor.best_params_)

print(Classifier_regressor.best_score_)

#prediction
y_pred = Classifier_regressor.predict(x_test)

#accuracy score
from sklearn.metrics import accuracy_score,classification_report
score = accuracy_score(y_pred,y_pred)
print(score)

Classificattion_report = classification_report(y_pred,y_test)
print(Classificattion_report)

sns.pairplot(df,hue='species')

