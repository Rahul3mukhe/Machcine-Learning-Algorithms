# -*- coding: utf-8 -*-
"""decision_tree_post-prunning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1voXNAUiLK42UUW-F2lERoz1YFxsb61l5
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
# %matplotlib inline

from sklearn.datasets import load_iris

iris = load_iris()

iris

iris.data

import seaborn as sns

df = sns.load_dataset('iris')

df

df.head()

#independent and dependent features
x = df.iloc[:,:-1]
y = iris.target

x,y

#train test split
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=0)

x_train

from sklearn.tree import DecisionTreeClassifier

#post prunning
treemodel = DecisionTreeClassifier(max_depth = 2)

treemodel.fit(x_train,y_train)

from sklearn import tree
plt.figure(figsize=(10,10))
tree.plot_tree(treemodel,filled=True)

#prediction
y_pred = treemodel.predict(x_test)

y_pred

from sklearn.metrics import accuracy_score,classification_report

score = accuracy_score(y_test,y_pred)

print(score)

print(classification_report(y_test,y_pred))

